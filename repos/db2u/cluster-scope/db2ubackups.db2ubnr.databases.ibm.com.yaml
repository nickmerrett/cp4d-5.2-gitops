apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    olm.managed: "true"
    operators.coreos.com/db2u-operator.swhub-operator: ""
  name: db2ubackups.db2ubnr.databases.ibm.com
spec:
  conversion:
    strategy: None
  group: db2ubnr.databases.ibm.com
  names:
    kind: Db2uBackup
    listKind: Db2uBackupList
    plural: db2ubackups
    singular: db2ubackup
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The state of Db2uBackup
          jsonPath: .status.state
          name: State
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                Db2uBackupSpec defines the desired state of Db2uBackup
                Only one backup option Database|Schema|TableSpace|Snapshot may be specified
              properties:
                databaseBackup:
                  description: Optional database backup configuration
                  properties:
                    backupTarget:
                      description: Backup location and any vendor-specific options
                      properties:
                        path:
                          description: Backup path (not currently supported)
                          type: string
                        vendor:
                          description: 'Vendor for the backup target. "disk" (default): backup to ${BACKUPDIR} path within db2 engine container'
                          enum:
                            - disk
                          type: string
                        vendorOpts:
                          description: Backup vendor-specific options (not currently supported)
                          items:
                            type: string
                          type: array
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    compress:
                      description: Whether to compress the backup (not currently supported)
                      type: boolean
                    dbName:
                      description: Name of the database to backup
                      type: string
                    type:
                      description: 'Backup type, valid values are: online | offline | incremental'
                      enum:
                        - online
                        - offline
                        - incremental
                        - delta
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                db2uName:
                  description: Name of the Db2uCluster CR containing database to backup
                  type: string
                schemaBackup:
                  description: Optional schema-level backup configuration
                  properties:
                    backupTarget:
                      description: Backup location and any vendor-specific options
                      properties:
                        path:
                          description: Backup path (not currently supported)
                          type: string
                        vendor:
                          description: 'Vendor for the backup target. "disk" (default): backup to ${BACKUPDIR} path within db2 engine container'
                          enum:
                            - disk
                          type: string
                        vendorOpts:
                          description: Backup vendor-specific options (not currently supported)
                          items:
                            type: string
                          type: array
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    compress:
                      description: Whether to compress the backup (not currently supported)
                      type: boolean
                    dbName:
                      description: Name of the database to backup
                      type: string
                    schemas:
                      description: List of schemas to include in the backup
                      items:
                        type: string
                      type: array
                    type:
                      description: 'Backup type, valid values are: online | incremental | delta'
                      enum:
                        - online
                        - offline
                        - incremental
                        - delta
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              description: Db2uBackupStatus defines the observed state of Db2uBackup
              properties:
                conditions:
                  items:
                    description: |-
                      Condition contains details for one aspect of the current state of this API Resource.
                      ---
                      This struct is intended for direct use as an array at the field path .status.conditions.  For example,
                      type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
                          // +patchMergeKey=type
                          // +patchStrategy=merge
                          // +listType=map
                          // +listMapKey=type
                          Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`


                          // other fields
                      }
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                db2uBackupSettings:
                  description: Captures key metadata from a Db2uBackup
                  properties:
                    backupLevel:
                      description: Level of backup
                      type: string
                    backupTimestamp:
                      description: Timestamp of the backup image
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                state:
                  description: Captures state of CR
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

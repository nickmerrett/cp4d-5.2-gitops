apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhooks-patcher
  namespace: ${argocdNS}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: patch-argo-app
  namespace: ${argocdNS}
rules:
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get","list","patch","update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: patch-argo-app-binding
  namespace: ${argocdNS}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: patch-argo-app
subjects:
- kind: ServiceAccount
  name: webhooks-patcher
  namespace: ${argocdNS}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: patch-pg-webhooks-off
  namespace: ${argocdNS}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: webhooks-patcher
      restartPolicy: Never
      containers:
      - name: patcher
        image: bitnami/kubectl:latest
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -euo pipefail
            echo "sleeping 180s..."
            sleep 180
            kubectl -n ${argocdNS} patch application postgresql-cluster-gitops \
              --type merge \
              -p '{"spec":{"source":{"helm":{"valuesObject":{"webhook":{"mutating":{"create":false},"validating":{"create":false}}}}}}}'
